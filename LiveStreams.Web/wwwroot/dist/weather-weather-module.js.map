{"version":3,"sources":["webpack:///./src/app/weather/weather.component.html","webpack:///./src/app/weather/weather.component.ts","webpack:///./src/app/weather/weather.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,ucAAuc,0BAA0B,qBAAqB,yBAAyB,qBAAqB,yBAAyB,qBAAqB,oBAAoB,iD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5iB;AACd;AACqB;AAOjE;IAIE,0BACS,IAAuB,EACV,OAAe,EAC3B,cAAiD;QAFlD,SAAI,GAAJ,IAAI,CAAmB;QAEtB,mBAAc,GAAd,cAAc,CAAmC;QAEzD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,wBAAwB,CAAC;IACzC,CAAC;IAEK,mCAAQ,GAAd;;;;;;wBACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;6BACtC,CAAC,IAAI,CAAC,SAAS,EAAf,wBAAe;wBACjB,SAAI;wBAAa,qBAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,EAAC,GAAG,EAAE,IAAI,CAAC,MAAM,GAAG,UAAU,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC;;wBAAtG,GAAK,SAAS,GAAG,SAAqF,CAAC;;;;;;KAE1G;IAlBU,gBAAgB;QAJ5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;SAExB,CAAC;QAOG,uEAAM,CAAC,UAAU,CAAC;yCADN,uDAAiB,UAEN,4EAAc;OAP7B,gBAAgB,CAmB5B;IAAD,uBAAC;CAAA;AAnB4B;;;;;;;;;;;;;;;;;;;;;;;;;ACTY;AACM;AACQ;AACV;AAa7C;IAAA;IAA6B,CAAC;IAAjB,aAAa;QAXzB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC;oBACpB;wBACE,IAAI,EAAE,EAAE;wBACR,SAAS,EAAE,mEAAgB;qBAC5B;iBAAC,CAAC;aACN;YACD,YAAY,EAAE,CAAC,mEAAgB,CAAC;SACjC,CAAC;OACW,aAAa,CAAI;IAAD,oBAAC;CAAA;AAAJ","file":"weather-weather-module.js","sourcesContent":["module.exports = \"<h1>Weather forecast</h1>\\r\\n\\r\\n<p>This component demonstrates fetching data from the server.</p>\\r\\n\\r\\n<p *ngIf=\\\"!forecasts\\\"><em>Loading...</em></p>\\r\\n\\r\\n<table class='table' *ngIf=\\\"forecasts\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Date</th>\\r\\n      <th>Temp. (C)</th>\\r\\n      <th>Temp. (F)</th>\\r\\n      <th>Summary</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let forecast of forecasts\\\">\\r\\n      <td>{{ forecast.dateFormatted }}</td>\\r\\n      <td>{{ forecast.temperatureC }}</td>\\r\\n      <td>{{ forecast.temperatureF }}</td>\\r\\n      <td>{{ forecast.summary }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\"","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { HttpClientService } from '../core';\r\nimport { PreloadService } from '../core/preload/preload.service';\r\nimport { WeatherForecast } from './weather.model';\r\n\r\n@Component({\r\n  selector: 'app-weather',\r\n  templateUrl: './weather.component.html'\r\n})\r\nexport class WeatherComponent implements OnInit {\r\n  public forecasts: WeatherForecast[];\r\n  public baseUrl: string;\r\n  public apiUrl: string;\r\n  constructor(\r\n    public http: HttpClientService, \r\n    @Inject('BASE_URL') baseUrl: string,\r\n    private preloadService: PreloadService<WeatherForecast[]>\r\n  ) {\r\n    this.baseUrl = baseUrl;\r\n    this.apiUrl = \"http://localhost:5050/\";\r\n  }\r\n\r\n  async ngOnInit() {\r\n    this.forecasts = this.preloadService.data;\r\n    if (!this.forecasts) {\r\n      this.forecasts = await this.http.get<WeatherForecast[]>({url: this.apiUrl + 'weather/', params: null});\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WeatherComponent } from './weather.component';\nimport {RouterModule} from '@angular/router';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: WeatherComponent\n      }])\n  ],\n  declarations: [WeatherComponent]\n})\nexport class WeatherModule { }"],"sourceRoot":""}