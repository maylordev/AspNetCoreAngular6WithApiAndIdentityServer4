{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/core/authGuard.service.ts","webpack:///./src/app/core/canDeactivateGuard.service.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/http/httpClient.service.ts","webpack:///./src/app/core/index.ts","webpack:///./src/app/core/material/material.module.ts","webpack:///./src/app/core/moduleImportCheck.ts","webpack:///./src/app/core/preload/preload.service.ts","webpack:///./src/app/core/userProfile.service.ts","webpack:///./src/app/nav-menu/nav-menu.component.css","webpack:///./src/app/nav-menu/nav-menu.component.html","webpack:///./src/app/nav-menu/nav-menu.component.ts","webpack:///./src/app/pageNotFound.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;AChCA,6CAA6C,yHAAyH,0BAA0B,OAAO,KAAK,K;;;;;;;;;;;ACA5M,wI;;;;;;;;;;;;;;;;;;;;;;;;;ACAoD;AACU;AAO9D;IACE,sBACE,cAAmC,EACnC,UAAsB;QAIxB,UAAK,GAAG,KAAK,CAAC;QAFZ,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;IACvF,CAAC;IANU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAGkB,4EAAc;YAClB,wDAAU;OAHb,YAAY,CAQxB;IAAD,mBAAC;CAAA;AARwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AACI;AACW;AAExD,WAAW;AACsD;AACc;AAE/B;AACC;AAEF;AACC;AACiB;AACA;AA6BjE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAxBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,8EAAqB;gBACrB,8EAAgB;aACjB;YACD,OAAO,EAAE;gBACP,uEAAa,CAAC,oBAAoB,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,CAAC;gBACjE,4DAAU;gBACV,qEAAgB;gBAChB,0DAAW;gBAEX,WAAW;gBACX,6EAAc;gBACd,4FAAuB;gBAEvB,UAAU;gBACV,4DAAgB;aACjB;YACD,SAAS,EAAE;gBACT,6DAAiB;aAClB;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;ACxCmB;AACiC;AAEC;AACV;AAEjE;;;;;;;;kEAQkE;AAClE,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,YAAY,EAAE,+BAA+B;KAC9C;IACD;QACE,IAAI,EAAC,SAAS;QACd,YAAY,EAAE,wCAAwC;KACvD;IACD;QACE,IAAI,EAAC,SAAS;QACd,YAAY,EAAE,wCAAwC;KACvD;IACD,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,6EAAqB,EAAE;CACpE,CAAC;AAWF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAT5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,kBAAkB,EAAE,iEAAiB,EAAE,CAAC,CAAC;YAClF,OAAO,EAAE,CAAC,4DAAY,CAAC;YACvB,SAAS,EAAE;gBACT,+CAAS;gBACT,wDAAkB;gBAClB,wDAAkB;aACnB;SACF,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5Cc;AASlB;AAEkC;AAG3D;IACE,mBAAoB,kBAAsC,EAAU,MAAc;QAA9D,uBAAkB,GAAlB,kBAAkB,CAAoB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvF,2BAAO,GAAP,UAAQ,KAAY;QAClB,IAAI,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE;YACtC,OAAO,IAAI,CAAC;SACb;QACD,IAAI,GAAG,GAAG,MAAI,KAAK,CAAC,IAAM,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QACvE,OAAO,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;IAC5C,CAAC;IAED,+BAAW,GAAX,UACE,IAA4B,EAC5B,KAA0B;QAE1B,IAAI,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE;YACtC,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,UAAU,EAAE,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAE7E,OAAO,KAAK,CAAC;IACf,CAAC;IAED,oCAAgB,GAAhB,UACE,KAA6B,EAC7B,KAA0B;QAE1B,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACxC,CAAC;IA7BU,SAAS;QADrB,gEAAU,EAAE;yCAE6B,uEAAkB,EAAkB,sDAAM;OADvE,SAAS,CA8BrB;IAAD,gBAAC;CAAA;AA9BqB;;;;;;;;;;;;;ACbtB;AAAA;AAAA;AAAwC;AAMxC;IAAA;IAmBA,CAAC;IAlBC,0CAAa,GAAb,UAAc,SAAiC;QAC7C,+FAA+F;QAC/F,eAAe;QACf,iCAAiC;QACjC,gDAAgD;QAChD,0CAA0C;QAC1C,WAAW;QACX,iBAAiB;QACjB,IAAI;QACJ,OAAO,SAAS,CAAC,aAAa,CAAC,CAAC;YAC9B,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACxD,CAAC;IAEO,yCAAY,GAApB,UAAqB,UAAsC;QACzD,IAAI,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACpC,IAAI,CAAC,GAAG,iDAAI,CAAC,CAAC,CAAC,CAAC;QAChB,OAAO,CAAC,CAAC;IACX,CAAC;IACH,yBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1B4D;AACd;AACF;AACE;AACY;AACA;AAE3D,oDAAoD;AACpD,0DAA0D;AAC1D,sDAAsD;AACtD,sDAAsD;AAEtD,gEAAgE;AAChE,sDAAsD;AACtD,4DAA4D;AAC5D,sDAAsD;AAEtD,oFAAoF;AACpF,4CAA4C;AAC5C,EAAE;AACF,8FAA8F;AAmB5F;IACA,oBAGI,YAAwB;QAE1B,+EAAoB,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;IACnD,CAAC;IAPY,UAAU;QAlBxB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY,EAAE,0DAAW,EAAE,4DAAY;aAExC;YACD,OAAO,EAAE;gBACP,4DAAY,EAAE,0DAAW,EAAE,4DAAY;aAExC;YACD,YAAY,EAAE;YACZ,iBAAiB;aAChB;YACH,SAAS,EAAE;gBACT,iBAAiB;gBACjB,oBAAoB;gBACpB,kBAAkB;gBAClB,uEAAc;aACf;SACF,CAAC;QAEG,yEAAQ,EAAE;QACV,yEAAQ,EAAE;yCACK,UAAU;OAJf,UAAU,CAQxB;IAAD,iBAAC;CAAA;AARwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCiB;AAChB;AAEmB;AAqB7C;IAIE,2BAAa,YAA0B;QAEnC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QAEjC,4DAA4D;QAC5D,IAAI,CAAC,WAAW,GAAG,4CAAK,CAAC,MAAM,CAAC;YAC5B,OAAO,EAAE,IAAI;YACb,OAAO,EAAE;gBACL,kBAAkB,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;aAC5C;SACJ,CAAC,CAAC;IAEP,CAAC;IAEY,+BAAG,GAAhB,UAAqB,OAAmB;;;;;;;wBAIZ,qBAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAI;gCAClD,MAAM,EAAE,KAAK;gCACb,GAAG,EAAE,OAAO,CAAC,GAAG;gCAChB,MAAM,EAAE,OAAO,CAAC,MAAM;6BACzB,CAAC;;wBAJE,aAAa,GAAG,SAIlB;wBAEF,sBAAM,CAAE,aAAa,CAAC,IAAI,CAAE,EAAC;;;wBAI7B,sBAAM,CAAE,OAAO,CAAC,MAAM,CAAE,IAAI,CAAC,cAAc,CAAE,OAAK,CAAE,CAAE,CAAE,EAAC;;;;;KAIhE;IAED,kFAAkF;IAClF,6DAA6D;IACrD,0CAAc,GAAtB,UAAwB,KAAU;QAE9B,IAAI,CAAC,YAAY,CAAC,WAAW,CAAE,KAAK,CAAE,CAAC;QAEvC,gFAAgF;QAChF,yBAAyB;QACzB,OAAM,CAAC;YACH,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,cAAc;YACpB,OAAO,EAAE,+BAA+B;SAC3C,CAAC,CAAC;IAEP,CAAC;IApDU,iBAAiB;QAD7B,gEAAU,EAAE;yCAKgB,0DAAY;OAJ5B,iBAAiB,CAqD7B;IAAD,wBAAC;CAAA;AArD6B;;;;;;;;;;;;;ACxB9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA4B;AACc;AACN;AACS;AACH;AAC1C,oCAAoC;AACpC,uCAAuC;AACvC,qCAAqC;AACrC,yCAAyC;AACzC,qCAAqC;AACrC,6CAA6C;AAC7C,yCAAyC;AACH;;;;;;;;;;;;;;;;;;;;;;;ACZG;AAMd;AAgB3B;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAd1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACL,iEAAe;gBACf,mEAAiB;gBACjB,kEAAgB;gBAChB,+DAAa;aACd;YACH,OAAO,EAAE;gBACL,iEAAe;gBACf,mEAAiB;gBACjB,kEAAgB;gBAChB,+DAAa;aACd;SACJ,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACtB3B;AAAA;AAAO,8BAA8B,YAAiB,EAAE,UAAkB;IACtE,IAAI,YAAY,EAAE;QAChB,IAAM,GAAG,GAAM,UAAU,yEAAsE,CAAC;QAChG,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;KACtB;AACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACLwC;AAG3C;IAEE;IAAgB,CAAC;IACjB,sBAAI,gCAAI;aAAR;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;aACD,UAAS,IAAO;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC;;;OAHA;IALU,cAAc;QAD1B,gEAAU,EAAE;;OACA,cAAc,CAU1B;IAAD,qBAAC;CAAA;AAV0B;;;;;;;;;;;;;;;;;;;;;;ACHgB;AAG3C;IADA;QAEE,eAAU,GAAY,KAAK,CAAC;IAC9B,CAAC;IAFY,kBAAkB;QAD9B,gEAAU,EAAE;OACA,kBAAkB,CAE9B;IAAD,yBAAC;CAAA;AAF8B;;;;;;;;;;;;ACH/B,iCAAiC,2BAA2B,KAAK,mIAAmI,kCAAkC,qBAAqB,KAAK,qGAAqG,wBAAwB,eAAe,gBAAgB,iBAAiB,mBAAmB,KAAK,mCAAmC,6FAA6F,yBAAyB,oCAAoC,SAAS,iBAAiB,+BAA+B,8BAA8B,yBAAyB,SAAS,wBAAwB,wBAAwB,SAAS,0BAA0B,uCAAuC,yBAAyB,SAAS,oBAAoB,wBAAwB,SAAS,oBAAoB,wBAAwB,4BAA4B,wBAAwB,SAAS,sBAAsB,+BAA+B,+BAA+B,SAAS,mBAAmB,wFAAwF,gCAAgC,6BAA6B,oCAAoC,SAAS,KAAK,K;;;;;;;;;;;ACA52C,+tC;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,eAAU,GAAG,KAAK,CAAC;IASrB,CAAC;IAPC,mCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,iCAAM,GAAN;QACE,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;IACrC,CAAC;IATU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;OACW,gBAAgB,CAU5B;IAAD,uBAAC;CAAA;AAV4B;;;;;;;;;;;;;;;;;;;;;;ACPa;AAY1C;IAAA;IAAqC,CAAC;IAAzB,qBAAqB;QAVjC,+DAAS,CAAC;YACT,QAAQ,EAAE,QAAS;YACnB,QAAQ,EAAE,WAAW;YACrB,QAAQ,EAAE,kLAKT;SACF,CAAC;OACW,qBAAqB,CAAI;IAAD,4BAAC;CAAA;AAAJ;;;;;;;;;;;;;ACZlC;AAAA;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;ACPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AACvC;AACX;IACL,OAAO,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACvD,CAAC;AAED,IAAM,SAAS,GAAG;IAChB;QACE,OAAO,EAAE,UAAU;QACnB,UAAU,EAAE,UAAU;QACtB,IAAI,EAAE,EAAE;KACT;CACF,CAAC;AAEF,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,CAAC,SAAS,CAAC,CAAC,eAAe,CAAC,yDAAS,CAAC;KACzD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["var map = {\n\t\"./counter/counter.module\": [\n\t\t\"./src/app/counter/counter.module.ts\",\n\t\t\"counter-counter-module\"\n\t],\n\t\"./home/home.module\": [\n\t\t\"./src/app/home/home.module.ts\",\n\t\t\"home-home-module\"\n\t],\n\t\"./weather/weather.module\": [\n\t\t\"./src/app/weather/weather.module.ts\",\n\t\t\"weather-weather-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"@media (max-width: 767px) {\\r\\n  /* On small screens, the nav menu spans the full width of the screen. Leave a space for it. */\\r\\n  .body-content {\\r\\n    padding-top: 50px;\\r\\n  }\\r\\n}\\r\\n\"","module.exports = \"<app-nav-menu></app-nav-menu>\\r\\n\\r\\n<div class='container-fluid'>\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","import {Component, ElementRef} from '@angular/core';\r\nimport {PreloadService} from './core/preload/preload.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  constructor(\r\n    preloadService: PreloadService<any>, \r\n    elementRef: ElementRef\r\n    ){\r\n    preloadService.data = JSON.parse(elementRef.nativeElement.getAttribute('data-init'));\r\n  }\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n// Material\r\nimport { MaterialModule } from \"./core/material/material.module\";\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppRoutingModule } from './app.routes';\r\nimport { HttpClientService } from './core/index';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { CoreModule } from './core/core.module';\r\nimport { PageNotFoundComponent } from './pageNotFound.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { WeatherComponent } from './weather/weather.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PageNotFoundComponent,\r\n    NavMenuComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    CoreModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    \r\n    // Material\r\n    MaterialModule,\r\n    BrowserAnimationsModule,\r\n\r\n    // Routing\r\n    AppRoutingModule,\r\n  ],\r\n  providers: [\r\n    HttpClientService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HomeComponent } from './home/home.component';\nimport { CounterComponent } from './counter/counter.component';\nimport { WeatherComponent } from './weather/weather.component';\n\nimport { NgModule } from '@angular/core';\nimport { PreloadAllModules, Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard, CanDeactivateGuard, UserProfileService } from './core';\nimport { PageNotFoundComponent } from './pageNotFound.component';\n\n/***************************************************************\n* Lazy Loading to Eager Loading\n*\n* 1. Remove the module and NgModule imports in `app.module.ts`\n*\n* 2. Remove the lazy load route from `app.routing.ts`\n*\n* 3. Change the module's default route path from '' to 'pathname'\n*****************************************************************/\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: './home/home.module#HomeModule'\n  },\n  {\n    path:'weather',\n    loadChildren: './weather/weather.module#WeatherModule',\n  },\n  {\n    path:'counter',\n    loadChildren: './counter/counter.module#CounterModule',\n  },\n  { path: '**', pathMatch: 'full', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })],\n  exports: [RouterModule],\n  providers: [\n    AuthGuard,\n    CanDeactivateGuard,\n    UserProfileService\n  ]\n})\nexport class AppRoutingModule { }","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  CanActivateChild,\n  CanLoad,\n  Route,\n  Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot\n} from '@angular/router';\n\nimport { UserProfileService } from './userProfile.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate, CanActivateChild, CanLoad {\n  constructor(private userProfileService: UserProfileService, private router: Router) { }\n\n  canLoad(route: Route) {\n    if (this.userProfileService.isLoggedIn) {\n      return true;\n    }\n    let url = `/${route.path}`;\n    this.router.navigate(['/login'], { queryParams: { redirectTo: url } });\n    return this.userProfileService.isLoggedIn;\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ) {\n    if (this.userProfileService.isLoggedIn) {\n      return true;\n    }\n    this.router.navigate(['/login'], { queryParams: { redirectTo: state.url } });\n\n    return false;\n  }\n\n  canActivateChild(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ) {\n    return this.canActivate(route, state);\n  }\n}","import { CanDeactivate } from '@angular/router';\nimport { Observable, from } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n  canDeactivate: () => any; // boolean|Promise<boolean>|Observable<boolean>;\n}\n\nexport class CanDeactivateGuard implements CanDeactivate<CanComponentDeactivate> {\n  canDeactivate(component: CanComponentDeactivate): Observable<boolean> | boolean {\n    // run the function for canDeactivate and if its a promise or a boolean we handle it either way\n    // return true;\n    // if (component.canDeactivate) {\n    //   let deactivate = component.canDeactivate();\n    //   return this.toObservable(deactivate);\n    // } else {\n    //   return true;\n    // }\n    return component.canDeactivate ?\n      this.toObservable(component.canDeactivate()) : true;\n  }\n\n  private toObservable(deactivate: Promise<boolean> | boolean ): Observable<boolean> | boolean {\n    let p = Promise.resolve(deactivate);\n    let o = from(p);\n    return o;\n  }\n}","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { throwIfAlreadyLoaded } from './moduleImportCheck';\nimport { PreloadService } from './preload/preload.service';\n\n// import { EntityService } from './entity.service';\n// import { ExceptionService } from './exception.service';\n// import { MessageService } from './message.service';\n// import { NavComponent } from './nav/nav.component';\n\n// import { throwIfAlreadyLoaded } from './module-import-guard';\n// import { ModalModule } from './modal/modal.module';\n// import { SpinnerModule } from './spinner/spinner.module';\n// import { ToastModule } from './toast/toast.module';\n\n// imports: imports the module's exports. which is usually declarables and providers\n// in our case the spinner has no providers.\n//\n// exports: exports modules AND components/directives/pipes that other modules may want to use\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, RouterModule,\n    // ModalModule, SpinnerModule, ToastModule\n  ],\n  exports: [\n    CommonModule, FormsModule, RouterModule,\n    // ModalModule, SpinnerModule, ToastModule, [NavComponent]\n  ],\n  declarations: [\n    //   NavComponent\n    ],\n  providers: [\n    // EntityService,\n    // ExceptionService,\n    // MessageService,\n    PreloadService\n  ]\n})export class CoreModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n      parentModule: CoreModule\n  ) {\n    throwIfAlreadyLoaded(parentModule, 'CoreModule');\n  }\n}","import { Injectable} from '@angular/core';\nimport axios from \"axios\";\nimport { AxiosInstance } from \"axios\";\nimport { ErrorHandler } from \"@angular/core\";\nimport { \n    HttpClient\n } from '@angular/common/http';\n\n export interface Params {\n  [ key: string ]: any;\n}\n\nexport interface GetOptions {\n  url: string;\n  params?: Params;\n}\n\nexport interface ErrorResponse {\n  id: string;\n  code: string;\n  message: string;\n}\n\n@Injectable()\nexport class HttpClientService {\n  private axiosClient: AxiosInstance;\n  private errorHandler: ErrorHandler;\n\n  constructor( errorHandler: ErrorHandler ) {\n\n      this.errorHandler = errorHandler;\n\n      // The ApiClient wraps calls to the underlying Axios client.\n      this.axiosClient = axios.create({\n          timeout: 3000,\n          headers: {\n              \"X-Initialized-At\": Date.now().toString()\n          }\n      });\n\n  }\n\n  public async get<T>( options: GetOptions ) : Promise<T> {\n\n      try {\n\n          var axiosResponse = await this.axiosClient.request<T>({\n              method: \"get\",\n              url: options.url,\n              params: options.params\n          });\n\n          return( axiosResponse.data );\n\n      } catch ( error ) {\n\n          return( Promise.reject( this.normalizeError( error ) ) );\n\n      }\n\n  }\n\n  // Errors can occur for a variety of reasons. Normalize the error response so that\n  // the calling context can assume a standard error structure.\n  private normalizeError( error: any ) : ErrorResponse {\n\n      this.errorHandler.handleError( error );\n\n      // NOTE: Since I'm not really dealing with a production API, this doesn't really\n      // normalize anything yet\n      return({\n          id: \"-1\",\n          code: \"UnknownError\",\n          message: \"An unexpected error occurred.\"\n      });\n\n  }\n}","// export * from './config';\nexport * from './http/httpClient.service';\nexport * from './authGuard.service';\nexport * from './canDeactivateGuard.service';\nexport * from './preload/preload.service';\n// export * from './entity.service';\n// export * from './exception.service';\n// export * from './message.service';\n// export * from './modal/modal.service';\n// export * from './rxjs-extensions';\n// export * from './spinner/spinner.service';\n// export * from './toast/toast.service';\nexport * from './userProfile.service';","import { NgModule } from '@angular/core';\nimport { \n    MatButtonModule, \n    MatCheckboxModule,\n    MatToolbarModule,\n    MatIconModule\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n      MatButtonModule, \n      MatCheckboxModule,\n      MatToolbarModule,\n      MatIconModule\n    ],\n  exports: [\n      MatButtonModule, \n      MatCheckboxModule,\n      MatToolbarModule,\n      MatIconModule\n    ],\n})\nexport class MaterialModule { }","export function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\n    if (parentModule) {\n      const msg = `${moduleName} has already been loaded. Import Core modules in the AppModule only.`;\n      throw new Error(msg);\n    }\n  }","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class PreloadService<T> {\n  private _data: T;\n  constructor() { }\n  get data(): T {\n    return this._data;\n  }\n  set data(data: T) {\n    this._data = data;\n  }\n\n}","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class UserProfileService {\n  isLoggedIn: boolean = false;\n}","module.exports = \"li .glyphicon {\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n/* Highlighting rules for nav menu items */\\r\\n\\r\\nli.link-active a,\\r\\nli.link-active a:hover,\\r\\nli.link-active a:focus {\\r\\n    background-color: #4189C7;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n/* Keep the nav menu independent of scrolling and on top of other items */\\r\\n\\r\\n.main-nav {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n    /* On small screens, convert the nav menu to a vertical sidebar */\\r\\n    .main-nav {\\r\\n        height: 100%;\\r\\n        width: calc(25% - 20px);\\r\\n    }\\r\\n    .navbar {\\r\\n        border-radius: 0px;\\r\\n        border-width: 0px;\\r\\n        height: 100%;\\r\\n    }\\r\\n    .navbar-header {\\r\\n        float: none;\\r\\n    }\\r\\n    .navbar-collapse {\\r\\n        border-top: 1px solid #444;\\r\\n        padding: 0px;\\r\\n    }\\r\\n    .navbar ul {\\r\\n        float: none;\\r\\n    }\\r\\n    .navbar li {\\r\\n        float: none;\\r\\n        font-size: 15px;\\r\\n        margin: 6px;\\r\\n    }\\r\\n    .navbar li a {\\r\\n        padding: 10px 16px;\\r\\n        border-radius: 4px;\\r\\n    }\\r\\n    .navbar a {\\r\\n        /* If a menu item's text is too long, truncate it */\\r\\n        width: 100%;\\r\\n        white-space: nowrap;\\r\\n        overflow: hidden;\\r\\n        text-overflow: ellipsis;\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n    <mat-toolbar-row>\\r\\n      <div class=\\\"button-row\\\">\\r\\n          <button mat-button [routerLink]=\\\"['/']\\\" routerLinkActive=\\\"router-link-active\\\" >Live Streams</button>\\r\\n        <button mat-button [routerLink]=\\\"['/counter']\\\" routerLinkActive=\\\"router-link-active\\\">Counter</button>\\r\\n        <button mat-button [routerLink]=\\\"['/weather']\\\" routerLinkActive=\\\"router-link-active\\\">Weather</button>\\r\\n        <!-- <button mat-button color=\\\"primary\\\">Primary</button>\\r\\n        <button mat-button color=\\\"accent\\\">Accent</button>\\r\\n        <button mat-button color=\\\"warn\\\">Warn</button>\\r\\n        <a mat-button routerLink=\\\".\\\">Link</a> -->\\r\\n      </div>\\r\\n    </mat-toolbar-row>\\r\\n  \\r\\n    <!-- <mat-toolbar-row>\\r\\n      <span>Second Line</span>\\r\\n      <span class=\\\"example-spacer\\\"></span>\\r\\n      <mat-icon class=\\\"example-icon\\\">verified_user</mat-icon>\\r\\n    </mat-toolbar-row>\\r\\n  \\r\\n    <mat-toolbar-row>\\r\\n      <span>Third Line</span>\\r\\n      <span class=\\\"example-spacer\\\"></span>\\r\\n      <mat-icon class=\\\"example-icon\\\">favorite</mat-icon>\\r\\n      <mat-icon class=\\\"example-icon\\\">delete</mat-icon>\\r\\n    </mat-toolbar-row> -->\\r\\n  </mat-toolbar>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  moduleId: module.id,\n  selector: 'story-404',\n  template: `\n    <article class=\"template animated slideInRight\">\n      <h4>Inconceivable!</h4>\n      <div>I do not think this page is where you think it is.</div>\n    </article>\n  `\n})\nexport class PageNotFoundComponent { }","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport 'hammerjs';\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { \r\n    provide: 'BASE_URL', \r\n    useFactory: getBaseUrl, \r\n    deps: [] \r\n  }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}